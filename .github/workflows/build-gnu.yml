name: build-gnu

on:
  workflow_call:

jobs:
  build-gnu:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - arm-unknown-linux-gnueabi
          # - arm-unknown-linux-gnueabihf
          #- armv5te-unknown-linux-gnueabi
          #- armv7-unknown-linux-gnueabi
          #- armv7-unknown-linux-gnueabihf
          #- i586-unknown-linux-gnu
          - i686-unknown-linux-gnu
          # - mips-unknown-linux-gnu
          #- mips64-unknown-linux-gnuabi64
          #- mips64el-unknown-linux-gnuabi64
          #- mipsel-unknown-linux-gnu not work
          # - powerpc-unknown-linux-gnu
          # - powerpc64-unknown-linux-gnu
          # - powerpc64le-unknown-linux-gnu
          # - riscv64gc-unknown-linux-gnu
          #- s390x-unknown-linux-gnu
          #- sparc64-unknown-linux-gnu
          #- thumbv7neon-unknown-linux-gnueabihf
          - x86_64-unknown-linux-gnu
          #- x86_64-unknown-linux-gnux32
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fix cargo config
        run: sed -e "s/.*replace-with.*//g" -i .cargo/config.toml

      # Download web
      - name: Download web
        uses: actions/download-artifact@v4.1.7
        with:
          name: pisugar-web
          path: |
            pisugar-webui/dist

      - name: Update env
        env:
          target: ${{ matrix.target }}
        run: |
          set -e

          if [ $target = "riscv64gc-unknown-linux-gnu" ]; then
            arch=riscv64
          else
            arch=${target%%-*}
          fi
          runtime=${target##*-linux-}
          gcc=$(echo gcc-$arch-linux-$runtime | tr '_' '-')
          prefix=$arch-linux-$runtime

          sudo apt update
          sudo apt install -y $gcc

          TARGET=$(echo $target | tr '[a-z\-]' '[A-Z_]')
          echo "prefix=$prefix" >> $GITHUB_ENV
          echo "target=$target" >> $GITHUB_ENV
          echo "CARGO_TARGET_${TARGET}_LINKER=${prefix}-gcc" >> $GITHUB_ENV

      # Rust cache
      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install cargo utils
        run: |
          cargo install cross --git https://github.com/cross-rs/cross
          cargo install cargo-deb
          cargo install cargo-rpm

      # Build
      - name: Rust build
        run: |
          mkdir -p target
          find target -name '*.deb' | xargs rm -rf
          find target -name '*.rpm' | xargs rm -rf
          sudo apt update && sudo apt install -y rpm
          cross build --target $target --release
          for app in server poweroff programmer; do
            ${prefix}-strip -s target/${target}/release/pisugar-${app}
            cargo deb --no-build --no-strip --target $target -p pisugar-${app}
            (cd pisugar-${app} && cargo rpm build --target ${target})
          done

      - name: Rename deb and rpm
        run: |
          for i in $(find . -name '*.deb'); do
            mv $i ${i%.deb}-gnu.deb
          done
          for i in $(find . -name '*.rpm'); do
            mv $i ${i%.rpm}-gnu.rpm
          done

      # Upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: gnu-${{ matrix.target }}
          path: |
            target/**/*.deb
            target/**/*.rpm
            target/**/pisugar-server
            target/**/pisugar-poweroff
            target/**/pisugar-programmer
          if-no-files-found: warn
