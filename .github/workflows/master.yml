name: Master

on:
  push:
    branches: [master]
    tags:
      - "v*"
  pull_request:
    branches: [master]

jobs:
  cancel-previous:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

  build-web:
    uses: ./.github/workflows/build-web.yml

  build-cross:
    needs: build-web
    uses: ./.github/workflows/build-cross.yml

  build-other:
    needs:
      - build-web
    uses: ./.github/workflows/build-other.yml

  dev-release:
    runs-on: ubuntu-latest
    needs:
      - build-web
      - build-other
      - build-cross
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fix cargo config
        run: sed -e "s/.*replace-with.*//g" -i .cargo/config.toml

      - name: Download all
        uses: actions/download-artifact@v4
        with:
          path: downloads

      - name: Create archives
        run: |
          mkdir -p archives
          cp -R downloads/* archives/
          cp scripts/*.sh archives/
          tar -czf archives.tar.gz archives

      # Development Release, push master branch
      - uses: "marvinpinto/action-automatic-releases@latest"
        if: github.event_name == 'push' && github.ref_name == 'master'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          title: "Development Build"
          prerelease: true
          draft: false
          files: |
            archives.tar.gz
            downloads/**/*
            scripts/*.sh
            scripts/aur/*.tar.gz
            !scripts/update-version.sh
            !scripts/install.sh

      # Draft Release, push tag v*
      - uses: "marvinpinto/action-automatic-releases@latest"
        if: github.event_name == 'push' && startsWith(github.ref_name, 'v')
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          draft: true
          files: |
            scripts/*.sh
            scripts/aur/*.tar.gz
            !scripts/update-version.sh
            !scripts/install.sh
            downloads/**/*

      # Upload QiNiu nightly
      - name: "Upload to QiNiu"
        if: github.event_name == 'push' && (github.ref_name == 'master' || startsWith(github.ref_name, 'v'))
        env:
          QINIU_BUCKET: ${{ secrets.QINIU_BUCKET }}
          QINIU_AK: ${{ secrets.QINIU_AK }}
          QINIU_SK: ${{ secrets.QINIU_SK }}
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip

          if [ $(uname -m) == 'x86_64' ]; then
            wget https://github.com/qiniu/qshell/releases/download/v2.16.1/qshell-v2.16.1-linux-amd64.tar.gz
            tar -xvf qshell-v2.16.1-linux-amd64.tar.gz
          else
            wget https://github.com/qiniu/qshell/releases/download/v2.16.1/qshell-v2.16.1-linux-386.tar.gz
            tar -xvf qshell-v2.16.1-linux-386.tar.gz
          fi
          chmod +x qshell
          ./qshell account -w ${QINIU_AK} ${QINIU_SK} deploy-account

          for f in $(find downloads -type f) $(find scripts -name '*.tar.gz'); do
            filename=${f##*/}
            key=nightly/${filename}
            ./qshell rput --overwrite ${QINIU_BUCKET} ${key} ${f}
          done
          for f in $(find scripts -name '*.sh' ); do
            filename=${f##*/}
            key=nightly/${filename}
            ./qshell rput --overwrite --mimetype text/plain ${QINIU_BUCKET} ${key} ${f} &
          done
          wait
          echo "All uploaded to qiniu"
